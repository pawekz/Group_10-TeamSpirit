/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package posinventory;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.mariadb.jdbc.Statement;

public class viewInventory extends javax.swing.JFrame {

    /**
     * Creates new form viewInventory
     */
    public viewInventory() {
        initComponents();
    }
    
  
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        viewLabel = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        panelJ = new javax.swing.JPanel();
        prodInfo = new javax.swing.JLabel();
        searchID = new javax.swing.JLabel();
        p_search = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        prodNAMEE = new javax.swing.JLabel();
        prodBarcodee = new javax.swing.JLabel();
        prodCategoryy = new javax.swing.JLabel();
        prodPricee = new javax.swing.JLabel();
        prodStockLevell = new javax.swing.JLabel();
        prodReorderLevell = new javax.swing.JLabel();
        prodNameText = new javax.swing.JTextField();
        barcodeText = new javax.swing.JTextField();
        categoryText = new javax.swing.JTextField();
        priceText = new javax.swing.JTextField();
        stocklevelText = new javax.swing.JTextField();
        reorderText = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        updateButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        viewLabel.setFont(new java.awt.Font("Verdana", 0, 24)); // NOI18N
        viewLabel.setText("VIEW INVENTORY");

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        panelJ.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        prodInfo.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        prodInfo.setText("PRODUCT INFORMATION :");

        searchID.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        searchID.setText("SEARCH ID :");

        p_search.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        p_search.setText("0");

        javax.swing.GroupLayout panelJLayout = new javax.swing.GroupLayout(panelJ);
        panelJ.setLayout(panelJLayout);
        panelJLayout.setHorizontalGroup(
            panelJLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelJLayout.createSequentialGroup()
                .addComponent(prodInfo)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(panelJLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(searchID)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(p_search, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelJLayout.setVerticalGroup(
            panelJLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelJLayout.createSequentialGroup()
                .addComponent(prodInfo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addGroup(panelJLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchID)
                    .addComponent(p_search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        prodNAMEE.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        prodNAMEE.setText("PRODUCT NAME :");

        prodBarcodee.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        prodBarcodee.setText("BARCODE :");

        prodCategoryy.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        prodCategoryy.setText("CATEGORY :");

        prodPricee.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        prodPricee.setText("PRICE :");

        prodStockLevell.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        prodStockLevell.setText("STOCK LEVEL :");

        prodReorderLevell.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        prodReorderLevell.setText("REORDER LEVEL :");

        prodNameText.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        prodNameText.setText("0");
        prodNameText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prodNameTextActionPerformed(evt);
            }
        });

        barcodeText.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        barcodeText.setText("0");

        categoryText.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        categoryText.setText("0");

        priceText.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        priceText.setText("0");

        stocklevelText.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        stocklevelText.setText("0");

        reorderText.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        reorderText.setText("0");

        searchButton.setText("SEARCH");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        updateButton.setText("UPDATE");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        deleteButton.setText("DELETE");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(prodReorderLevell)
                            .addComponent(prodStockLevell)
                            .addComponent(prodPricee)
                            .addComponent(prodCategoryy)
                            .addComponent(prodBarcodee)
                            .addComponent(prodNAMEE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(prodNameText, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(barcodeText, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(categoryText, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(priceText, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(stocklevelText, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(reorderText, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(updateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(prodNAMEE)
                    .addComponent(prodNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(prodBarcodee)
                    .addComponent(barcodeText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(prodCategoryy)
                    .addComponent(categoryText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(prodPricee)
                    .addComponent(priceText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(prodStockLevell)
                    .addComponent(stocklevelText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(prodReorderLevell)
                    .addComponent(reorderText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(updateButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(searchButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelJ, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(panelJ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(61, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(viewLabel)
                .addContainerGap(846, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(viewLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
        private Connection connection;
    private void prodNameTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prodNameTextActionPerformed
        // search
       
        
    }//GEN-LAST:event_prodNameTextActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
   
        
        try {
       try {
           // Load the MariaDB JDBC driver
           Class.forName("org.mariadb.jdbc.Driver");
       } catch (ClassNotFoundException ex) {
           Logger.getLogger(viewInventory.class.getName()).log(Level.SEVERE, null, ex);
       }

        // Establish the connection
        String url = "jdbc:mariadb://localhost:3306/teamspiritpos";
        String username = "root";
        String password = "";

        connection = DriverManager.getConnection(url, username, password);

        int productId = Integer.parseInt(p_search.getText());

        // Construct the SQL query to fetch data based on product_id
        String sql = "SELECT * FROM products WHERE product_id = ?";
       // Set the product_id value in the prepared statement
       try (PreparedStatement statement = connection.prepareStatement(sql)) {
           // Set the product_id value in the prepared statement
           statement.setInt(1, productId);
           
           // Execute the query and retrieve the data
            java.sql.ResultSet resultSet = statement.executeQuery();
           
           // Check if data is found
           if (resultSet.next()) {
               // Assuming these fields are where you want to display the retrieved data
               prodNameText.setText(resultSet.getString("product_name"));
               barcodeText.setText(resultSet.getString("barcode"));
               categoryText.setText(resultSet.getString("category"));
               priceText.setText(String.valueOf(resultSet.getDouble("price")));
               stocklevelText.setText(String.valueOf(resultSet.getInt("stock_level")));
               reorderText.setText(String.valueOf(resultSet.getInt("reorder_level")));
           } else {
               // If no data is found, display a message or handle accordingly
               JOptionPane.showMessageDialog(this, "Product ID not found", "Error", JOptionPane.ERROR_MESSAGE);
           }
           
           // Close the result set and statement
           resultSet.close();
       }
    } catch (NumberFormatException | SQLException ex) {
        // Handle parsing errors or SQL exceptions
        ex.printStackTrace(); // Handle this appropriately in your application
    }
        checkLowStock();
    }
   

private void checkLowStock() {
    try {
        // Fetch data from the database to get current stock levels
        String query = "SELECT * FROM products WHERE stock_level < ?"; // Adjust your query accordingly
        PreparedStatement statement = connection.prepareStatement(query);
        statement.setInt(1, 5); // Set your low stock threshold
        java.sql.ResultSet resultSet = statement.executeQuery();

        while (resultSet.next()) {
            String productName = resultSet.getString("product_name");
            int stockLevel = resultSet.getInt("stock_level");

            // Check if stock level is low for each product
            if (stockLevel < 5) {
                // Trigger a notification
                JOptionPane.showMessageDialog(this,
                        "Low Stock Alert for " + productName + ". Current Stock: " + stockLevel,
                        "Low Stock Alert",
                        JOptionPane.WARNING_MESSAGE);
            }
        }

        // Close the statement and result set after use
        statement.close();
        resultSet.close();

    } catch (SQLException ex) {
        // Handle SQL exceptions
        ex.printStackTrace();
    }
}

    private static class productTable {

        public productTable() {
        }
    
    }//GEN-LAST:event_searchButtonActionPerformed

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed

    try {
        // Create an SQL update query
        try ( // Establish a connection to your database
                Connection connection = DriverManager.getConnection("jdbc:mariadb://localhost:3306/teamspiritpos", "root", "")) {
            // Create an SQL update query
            String sql = "UPDATE products SET product_name=?, barcode=?, category=?, price=?, stock_level=?, reorder_level=? WHERE product_id=?";
            
            // Prepare the statement
            PreparedStatement statement = connection.prepareStatement(sql);
            
            // Set the parameters based on the text fields
            statement.setString(1, prodNameText.getText());
            statement.setString(2, barcodeText.getText());
            statement.setString(3, categoryText.getText());
            statement.setDouble(4, Double.parseDouble(priceText.getText()));
            statement.setInt(5, Integer.parseInt(stocklevelText.getText()));
            statement.setInt(6, Integer.parseInt(reorderText.getText()));
            statement.setInt(7, Integer.parseInt(p_search.getText())); // Assuming p_search contains the product ID to update
            
            // Execute the update query
            int rowsAffected = statement.executeUpdate();
            
            if (rowsAffected > 0) {
                JOptionPane.showMessageDialog(this, "Update Successful", "Success", JOptionPane.INFORMATION_MESSAGE);
                // You might want to update your UI or perform additional actions upon successful update
            } else {
                JOptionPane.showMessageDialog(this, "Update Failed", "Error", JOptionPane.ERROR_MESSAGE);
            }
            
            // Close the statement and connection
            statement.close();
        }
    } catch (SQLException | NumberFormatException ex) {
        // Handle any exceptions or errors
        ex.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_updateButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
         try {
        Class.forName("org.mariadb.jdbc.Driver");
        String url = "jdbc:mariadb://localhost:3306/teamspiritpos";
        String username = "root";
        String password = "";
        connection = DriverManager.getConnection(url, username, password);

        String sql = "DELETE FROM products WHERE product_id = ?";
        PreparedStatement statement = connection.prepareStatement(sql);
        statement.setInt(1, Integer.parseInt(p_search.getText()));

        int rowsAffected = statement.executeUpdate();
        if (rowsAffected > 0) {
            JOptionPane.showMessageDialog(this, "Successfully Deleted", "Success", JOptionPane.INFORMATION_MESSAGE);
            // Optionally, clear the input fields or update the display after deletion
            // Clearing fields example:
            clearFields();
        } else {
            JOptionPane.showMessageDialog(this, "Failed to delete. Please try again.", "Error", JOptionPane.ERROR_MESSAGE);
        }

        statement.close();
        connection.close();
    } catch (ClassNotFoundException | SQLException ex) {
        ex.printStackTrace();
    }
}  

private void clearFields() {
    prodNameText.setText("");
    // Clear other input fields similarly
}

    private static class p_search {

        private static String getText() {
            throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
        }

        public p_search() {
        }
    }

    private static class prodNameText {

        private static void setText(String string) {
            throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
        }

        public prodNameText() {
        }
    
    }//GEN-LAST:event_deleteButtonActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(viewInventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(viewInventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(viewInventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(viewInventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new viewInventory().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField barcodeText;
    private javax.swing.JTextField categoryText;
    private javax.swing.JButton deleteButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField p_search;
    private javax.swing.JPanel panelJ;
    private javax.swing.JTextField priceText;
    private javax.swing.JLabel prodBarcodee;
    private javax.swing.JLabel prodCategoryy;
    private javax.swing.JLabel prodInfo;
    private javax.swing.JLabel prodNAMEE;
    private javax.swing.JTextField prodNameText;
    private javax.swing.JLabel prodPricee;
    private javax.swing.JLabel prodReorderLevell;
    private javax.swing.JLabel prodStockLevell;
    private javax.swing.JTextField reorderText;
    private javax.swing.JButton searchButton;
    private javax.swing.JLabel searchID;
    private javax.swing.JTextField stocklevelText;
    private javax.swing.JButton updateButton;
    private javax.swing.JLabel viewLabel;
    // End of variables declaration//GEN-END:variables

    private static class ResultSet {

        public ResultSet() {
        }

        private void close() {
            throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
        }
    }

    private static class resultSet {

        private static boolean next() {
            throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
        }

        private static Object getString(String product_id) {
            throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
        }

        public resultSet() {
        }
    }
}
